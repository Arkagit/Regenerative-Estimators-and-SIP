
R version 4.2.2 (2022-10-31) -- "Innocent and Trusting"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: aarch64-apple-darwin20 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> set.seed(1234)
> 
> library(mcmcse)
> library(foreach)
> library(doParallel)
Loading required package: iterators
Loading required package: parallel
> 
> source("Small_set.R")
Warning message:
glm.fit: fitted probabilities numerically 0 or 1 occurred 
> 
> reps = 10
> Ratio = 15
> samp_size = 5e6
> # Parallelizing norm calculation
> 
> cv = list()
> 
> #parallel::detectCores()
> #n.cores <- parallel::detectCores() - 1
> 
> #register it to be used by %dopar%
> #doParallel::registerDoParallel(cores = n.cores)
> 
> #covar = foreach(k = 1:reps, .packages = c("mcmcse")) %dopar% {
> #covar  = list()
> 
> for(k in 1:reps){
+ 
+ 	ac_data = probit_gibbs(dat = dat, nsim = samp_size)
+ 	eta1_det = rep(0, samp_size)
+ 
+ 	for(j in 1:(samp_size-1)){
+ 	  betaj1 <- ac_data$beta[j+1,]
+ 	  zj1 <- ac_data$z[j+1,]
+ 	  betaj0 <- ac_data$beta[j,]
+ 	  zj0 <- ac_data$z[j,]
+ 	  eta1_det[j] <- etaj_cube_det(betaj0, zj0, betaj1, zj1)
+ 	}
+ 	#Number of total regenerations for Deterministic Scan
+ 	regen_det = rbinom(samp_size, 1, eta1_det)
+ 
+ 	# Summary on regenerations
+ 	regen_steps = which(regen_det == 1) + 1
+ 	regen_points = c(1, regen_steps[- length(regen_steps)])
+ 	regen_length = regen_steps - regen_points
+ 
+ 	Z = matrix(0, nrow = length(regen_steps), ncol = 3)
+ 
+ 	for (j in 1:length(regen_steps)) {
+ 	    foo <- ac_data$beta[regen_points[j]:(regen_points[j] + regen_length[j]), ]
+ 	    foo <- as.matrix(foo, ncol = 3)
+ 	    Z[j,] = colSums(foo)
+ 	}
+ 
+ 	Z_bar = colMeans(Z)
+ 
+ 	# Mean length of regenerations
+ 	mu = mean(regen_length)
+ 
+ 	dummy = list()
+ 
+ 	dummy[[1]] = mcse.multi(ac_data$beta, method = "bm", r = 1, size = "sqroot")$cov/mu
+ 
+ 	dummy[[2]] = mcse.multi(ac_data$beta, method = "bm", r = 1)$cov/mu
+ 
+ 	dummy[[3]] = mcse.multi(ac_data$beta, method = "bm", r = 1, size = 5e4)$cov/mu
+ 
+ 	dummy[[4]] = regen_var(Z, mu, regen_steps)
+ 
+ 	dummy[[5]] = regen_var2(Z, mu, regen_steps)
+ 
+ 	dummy[[6]] = regen_var3(Z, mu, regen_steps)
+ 
+ 	cv[[k]] = dummy
+ 
+ 	print(paste(k))
+ }
[1] "1"
[1] "2"
[1] "3"
[1] "4"
[1] "5"
[1] "6"
[1] "7"
[1] "8"
[1] "9"
[1] "10"
Warning messages:
1: glm.fit: fitted probabilities numerically 0 or 1 occurred 
2: glm.fit: fitted probabilities numerically 0 or 1 occurred 
3: glm.fit: fitted probabilities numerically 0 or 1 occurred 
4: glm.fit: fitted probabilities numerically 0 or 1 occurred 
5: glm.fit: fitted probabilities numerically 0 or 1 occurred 
6: glm.fit: fitted probabilities numerically 0 or 1 occurred 
7: glm.fit: fitted probabilities numerically 0 or 1 occurred 
8: glm.fit: fitted probabilities numerically 0 or 1 occurred 
9: glm.fit: fitted probabilities numerically 0 or 1 occurred 
10: glm.fit: fitted probabilities numerically 0 or 1 occurred 
> 
> cv
[[1]]
[[1]][[1]]
           [,1]      [,2]       [,3]
[1,]  0.5557073 -1.088371 -0.6911933
[2,] -1.0883713  2.138165  1.3558236
[3,] -0.6911933  1.355824  0.8628128

[[1]][[2]]
           [,1]      [,2]       [,3]
[1,]  0.6837223 -1.339029 -0.8505015
[2,] -1.3390292  2.629109  1.6677227
[3,] -0.8505015  1.667723  1.0610359

[[1]][[3]]
          [,1]      [,2]      [,3]
[1,]  4.693672 -9.150689 -5.832026
[2,] -9.150689 17.847099 11.372138
[3,] -5.832026 11.372138  7.250437

[[1]][[4]]
          [,1]      [,2]      [,3]
[1,]  33.69536 -73.56040 -43.58531
[2,] -73.56040 160.89015  95.21995
[3,] -43.58531  95.21995  56.39660

[[1]][[5]]
           [,1]      [,2]      [,3]
[1,]   5.563551 -10.84278 -6.899636
[2,] -10.842783  21.14014 13.449273
[3,]  -6.899636  13.44927  8.560103

[[1]][[6]]
           [,1]      [,2]      [,3]
[1,]   6.234449 -12.17831 -7.737538
[2,] -12.178305  23.79657 15.116728
[3,]  -7.737538  15.11673  9.606336


[[2]]
[[2]][[1]]
           [,1]       [,2]       [,3]
[1,]  0.4040476 -0.7958996 -0.5055495
[2,] -0.7958996  1.5744328  0.9982370
[3,] -0.5055495  0.9982370  0.6359364

[[2]][[2]]
           [,1]      [,2]       [,3]
[1,]  0.5025406 -0.991126 -0.6294039
[2,] -0.9911260  1.961922  1.2439959
[3,] -0.6294039  1.243996  0.7918117

[[2]][[3]]
          [,1]      [,2]      [,3]
[1,]  2.386499 -4.685994 -2.998705
[2,] -4.685994  9.211287  5.891109
[3,] -2.998705  5.891109  3.770941

[[2]][[4]]
          [,1]      [,2]      [,3]
[1,]  19.89601 -44.64432 -26.08711
[2,] -44.64432 100.35256  58.57032
[3,] -26.08711  58.57032  34.21330

[[2]][[5]]
          [,1]      [,2]      [,3]
[1,]  2.054148 -4.032297 -2.583653
[2,] -4.032297  7.924423  5.073927
[3,] -2.583653  5.073927  3.252221

[[2]][[6]]
          [,1]      [,2]      [,3]
[1,]  2.216330 -4.355051 -2.789353
[2,] -4.355051  8.567215  5.483643
[3,] -2.789353  5.483643  3.513401


[[3]]
[[3]][[1]]
           [,1]       [,2]       [,3]
[1,]  0.3628837 -0.7150555 -0.4536294
[2,] -0.7150555  1.4145579  0.8957142
[3,] -0.4536294  0.8957142  0.5697880

[[3]][[2]]
           [,1]       [,2]       [,3]
[1,]  0.4297854 -0.8468171 -0.5374219
[2,] -0.8468171  1.6739233  1.0606604
[3,] -0.5374219  1.0606604  0.6746730

[[3]][[3]]
          [,1]      [,2]      [,3]
[1,]  2.132209 -4.187211 -2.652845
[2,] -4.187211  8.228253  5.211837
[3,] -2.652845  5.211837  3.303427

[[3]][[4]]
          [,1]      [,2]      [,3]
[1,]  21.42729 -47.61673 -27.92584
[2,] -47.61673 106.03662  62.11067
[3,] -27.92584  62.11067  36.40959

[[3]][[5]]
          [,1]      [,2]      [,3]
[1,]  2.985352 -5.855411 -3.710076
[2,] -5.855411 11.492022  7.279620
[3,] -3.710076  7.279620  4.613396

[[3]][[6]]
          [,1]      [,2]      [,3]
[1,]  2.952152 -5.787283 -3.668093
[2,] -5.787283 11.352336  7.193681
[3,] -3.668093  7.193681  4.560433


[[4]]
[[4]][[1]]
           [,1]       [,2]       [,3]
[1,]  0.4343803 -0.8537585 -0.5421525
[2,] -0.8537585  1.6840342  1.0676316
[3,] -0.5421525  1.0676316  0.6795657

[[4]][[2]]
           [,1]      [,2]       [,3]
[1,]  0.5551153 -1.091629 -0.6932745
[2,] -1.0916290  2.152751  1.3655608
[3,] -0.6932745  1.365561  0.8689022

[[4]][[3]]
          [,1]      [,2]      [,3]
[1,]  3.063939 -6.009113 -3.823015
[2,] -6.009113 11.792621  7.500364
[3,] -3.823015  7.500364  4.773359

[[4]][[4]]
          [,1]      [,2]      [,3]
[1,]  22.69856 -49.95870 -29.49074
[2,] -49.95870 110.16459  64.95529
[3,] -29.49074  64.95529  38.32802

[[4]][[5]]
          [,1]      [,2]      [,3]
[1,]  3.658877 -7.193148 -4.562970
[2,] -7.193148 14.147196  8.972597
[3,] -4.562970  8.972597  5.692982

[[4]][[6]]
          [,1]      [,2]      [,3]
[1,]  3.683067 -7.248505 -4.600258
[2,] -7.248505 14.271922  9.055733
[3,] -4.600258  9.055733  5.748380


[[5]]
[[5]][[1]]
           [,1]       [,2]       [,3]
[1,]  0.3675319 -0.7229333 -0.4587418
[2,] -0.7229333  1.4280890  0.9045273
[3,] -0.4587418  0.9045273  0.5755418

[[5]][[2]]
           [,1]       [,2]       [,3]
[1,]  0.3847369 -0.7569544 -0.4804686
[2,] -0.7569544  1.4954942  0.9475520
[3,] -0.4804686  0.9475520  0.6030296

[[5]][[3]]
          [,1]      [,2]      [,3]
[1,]  2.395849 -4.730142 -2.991489
[2,] -4.730142  9.345980  5.909082
[3,] -2.991489  5.909082  3.738304

[[5]][[4]]
          [,1]      [,2]      [,3]
[1,]  21.44037 -47.51136 -27.91213
[2,] -47.51136 105.51861  61.90423
[3,] -27.91213  61.90423  36.35051

[[5]][[5]]
          [,1]      [,2]      [,3]
[1,]  3.289760 -6.464814 -4.102345
[2,] -6.464814 12.710730  8.063528
[3,] -4.102345  8.063528  5.117929

[[5]][[6]]
          [,1]      [,2]      [,3]
[1,]  3.397153 -6.673488 -4.229887
[2,] -6.673488 13.116484  8.311756
[3,] -4.229887  8.311756  5.269631


[[6]]
[[6]][[1]]
           [,1]       [,2]       [,3]
[1,]  0.3943650 -0.7771945 -0.4938229
[2,] -0.7771945  1.5383247  0.9754857
[3,] -0.4938229  0.9754857  0.6215626

[[6]][[2]]
           [,1]       [,2]       [,3]
[1,]  0.4580884 -0.9025688 -0.5739238
[2,] -0.9025688  1.7851338  1.1331555
[3,] -0.5739238  1.1331555  0.7223149

[[6]][[3]]
          [,1]      [,2]      [,3]
[1,]  1.856583 -3.645732 -2.333017
[2,] -3.645732  7.164595  4.582763
[3,] -2.333017  4.582763  2.935141

[[6]][[4]]
          [,1]      [,2]      [,3]
[1,]  22.68675 -50.92972 -29.76273
[2,] -50.92972 114.52965  66.85384
[3,] -29.76273  66.85384  39.05622

[[6]][[5]]
          [,1]      [,2]      [,3]
[1,]  2.346506 -4.596535 -2.948171
[2,] -4.596535  9.010492  5.776437
[3,] -2.948171  5.776437  3.707151

[[6]][[6]]
          [,1]      [,2]      [,3]
[1,]  2.188194 -4.288611 -2.746472
[2,] -4.288611  8.410704  5.383896
[3,] -2.746472  5.383896  3.450419


[[7]]
[[7]][[1]]
           [,1]       [,2]       [,3]
[1,]  0.3431282 -0.6787743 -0.4301283
[2,] -0.6787743  1.3493383  0.8532547
[3,] -0.4301283  0.8532547  0.5421352

[[7]][[2]]
           [,1]       [,2]       [,3]
[1,]  0.4064450 -0.8044077 -0.5093830
[2,] -0.8044077  1.5985847  1.0104789
[3,] -0.5093830  1.0104789  0.6412462

[[7]][[3]]
          [,1]      [,2]      [,3]
[1,]  2.110123 -4.191726 -2.640906
[2,] -4.191726  8.332054  5.248487
[3,] -2.640906  5.248487  3.308483

[[7]][[4]]
          [,1]      [,2]      [,3]
[1,]  16.33152 -36.83089 -21.38362
[2,] -36.83089  83.26591  48.26955
[3,] -21.38362  48.26955  28.01089

[[7]][[5]]
          [,1]      [,2]      [,3]
[1,]  2.388578 -4.744648 -2.989793
[2,] -4.744648  9.431003  5.941854
[3,] -2.989793  5.941854  3.745745

[[7]][[6]]
          [,1]      [,2]      [,3]
[1,]  2.448512 -4.863188 -3.070231
[2,] -4.863188  9.665228  6.100766
[3,] -3.070231  6.100766  3.853297


[[8]]
[[8]][[1]]
           [,1]       [,2]       [,3]
[1,]  0.4601510 -0.9045313 -0.5745309
[2,] -0.9045313  1.7844117  1.1317118
[3,] -0.5745309  1.1317118  0.7205926

[[8]][[2]]
           [,1]      [,2]       [,3]
[1,]  0.6092582 -1.197706 -0.7605526
[2,] -1.1977059  2.360900  1.4973426
[3,] -0.7605526  1.497343  0.9525592

[[8]][[3]]
          [,1]      [,2]      [,3]
[1,]  2.909607 -5.709269 -3.626678
[2,] -5.709269 11.210528  7.118632
[3,] -3.626678  7.118632  4.523831

[[8]][[4]]
          [,1]      [,2]      [,3]
[1,]  31.84251 -70.39597 -41.40870
[2,] -70.39597 155.82811  91.58571
[3,] -41.40870  91.58571  53.85971

[[8]][[5]]
          [,1]      [,2]      [,3]
[1,]  3.576743 -7.039565 -4.466308
[2,] -7.039565 13.861715  8.792447
[3,] -4.466308  8.792447  5.580228

[[8]][[6]]
          [,1]      [,2]      [,3]
[1,]  3.764050 -7.395851 -4.699612
[2,] -7.395851 14.538020  9.235973
[3,] -4.699612  9.235973  5.870747


[[9]]
[[9]][[1]]
           [,1]       [,2]       [,3]
[1,]  0.4257607 -0.8386141 -0.5322830
[2,] -0.8386141  1.6585646  1.0507563
[3,] -0.5322830  1.0507563  0.6686716

[[9]][[2]]
           [,1]       [,2]       [,3]
[1,]  0.4993898 -0.9843166 -0.6243953
[2,] -0.9843166  1.9471286  1.2330505
[3,] -0.6243953  1.2330505  0.7839140

[[9]][[3]]
          [,1]      [,2]      [,3]
[1,]  3.304765 -6.497717 -4.126009
[2,] -6.497717 12.783570  8.114838
[3,] -4.126009  8.114838  5.154109

[[9]][[4]]
          [,1]      [,2]      [,3]
[1,]  28.68329 -63.36161 -37.38982
[2,] -63.36161 140.28129  82.66251
[3,] -37.38982  82.66251  48.75598

[[9]][[5]]
          [,1]      [,2]      [,3]
[1,]  4.818306 -9.465016 -6.027615
[2,] -9.465016 18.600293 11.842279
[3,] -6.027615 11.842279  7.542961

[[9]][[6]]
          [,1]      [,2]      [,3]
[1,]  4.634950 -9.111341 -5.802255
[2,] -9.111341 17.919801 11.408414
[3,] -5.802255 11.408414  7.266363


[[10]]
[[10]][[1]]
           [,1]       [,2]       [,3]
[1,]  0.4028369 -0.7936716 -0.5030962
[2,] -0.7936716  1.5689463  0.9930318
[3,] -0.5030962  0.9930318  0.6308917

[[10]][[2]]
           [,1]       [,2]       [,3]
[1,]  0.4323446 -0.8516219 -0.5396910
[2,] -0.8516219  1.6827516  1.0648948
[3,] -0.5396910  1.0648948  0.6762324

[[10]][[3]]
          [,1]      [,2]      [,3]
[1,]  3.223282 -6.357693 -4.028324
[2,] -6.357693 12.546495  7.947308
[3,] -4.028324  7.947308  5.037040

[[10]][[4]]
          [,1]      [,2]      [,3]
[1,]  30.17133 -66.70565 -39.26846
[2,] -66.70565 147.70809  86.86786
[3,] -39.26846  86.86786  51.12125

[[10]][[5]]
          [,1]      [,2]      [,3]
[1,]  3.931865 -7.766646 -4.919248
[2,] -7.766646 15.348677  9.719355
[3,] -4.919248  9.719355  6.157328

[[10]][[6]]
          [,1]      [,2]      [,3]
[1,]  3.607897 -7.125592 -4.517037
[2,] -7.125592 14.079868  8.923553
[3,] -4.517037  8.923553  5.658306


> 
> 
> norm_reg1 = rep(0, length(reps))
> norm_reg2 = rep(0, length(reps))
> norm_reg3 = rep(0, length(reps))
> norm_bmopt = rep(0, length(reps))
> norm_bmth = rep(0, length(reps))
> norm_bm1e4 = rep(0, length(reps))
> 
> 
> for(i in 1:reps){
+ 	norm_bmth[i] = norm(cv[[i]][[1]], type = "F")
+ 	norm_bmopt[i] = norm(cv[[i]][[2]], type = "F")
+ 	norm_bm1e4[i] = norm(cv[[i]][[3]], type = "F")
+ 	norm_reg1[i] = norm(cv[[i]][[4]], type = "F")
+ 	norm_reg2[i] = norm(cv[[i]][[5]], type = "F")
+ 	norm_reg3[i] = norm(cv[[i]][[6]], type = "F")
+ }
> 
> names = c("BM(0.5)", "BM(1/3)", "BM(1e4)", "REG1", "REG2", "REG3")
> 
> 
> pdf(file="Boxplot1.pdf")
> 
> boxplot(norm_bmth, norm_bmopt, norm_bm1e4, norm_reg1, norm_reg2, norm_reg3,
+ 	names = names)
> 
> dev.off()
null device 
          1 
> 
> pdf(file="Boxplot2.pdf")
> 
> boxplot(norm_bmth, norm_bmopt, norm_bm1e4, norm_reg2, norm_reg3,
+ 	names = c("BM(0.5)", "BM(1/3)", "BM(1e4)", "REG2", "REG3"))
> 
> dev.off()
null device 
          1 
> 
> 
> 
> proc.time()
   user  system elapsed 
517.195  31.163 552.646 
